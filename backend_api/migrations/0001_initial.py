# Generated by Django 2.0.6 on 2018-10-06 08:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_hash', models.CharField(max_length=10)),
                ('avatar', models.CharField(max_length=50)),
                ('settings', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GroupUserMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend_api.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_hash', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.IntegerField(unique=True)),
                ('username', models.CharField(max_length=20)),
                ('full_name', models.CharField(max_length=50)),
                ('avatar', models.CharField(max_length=50)),
                ('settings', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=20)),
                ('uuid', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserChatMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_hash', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_one', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_one', to='backend_api.User')),
                ('user_two', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_two', to='backend_api.User')),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('token', models.TextField()),
                ('entry_timestamp', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend_api.Profile'),
        ),
        migrations.AddField(
            model_name='groupusermapping',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend_api.User'),
        ),
        migrations.AlterUniqueTogether(
            name='userchatmapping',
            unique_together={('user_one', 'user_two')},
        ),
    ]
